@model WhistleblowingApp.Models.Segnalazione

@{
    ViewData["Title"] = "Whistleblowing - Dettagli Segnalazione";
    var dataSegnalazione = Model.DataCreazione;
    string dataSegnalazioneStr = null;
    if (dataSegnalazione != null)
    {
        var hour = dataSegnalazione.Hour;
        var minute = dataSegnalazione.Minute;
        var ampm = hour < 12 ? "am" : "pm";
        dataSegnalazioneStr = $"{dataSegnalazione:dd-MM-yyyy}<span class='dtl-date-gap'></span>{hour:D2}:{minute:D2}{ampm}";
    }
    var dataScadenza = dataSegnalazione.AddMonths(3);
    var dataScadenzaStr = dataScadenza.ToString("dd-MM-yyyy");
}

<div class="dtl-container">
    <div class="dtl-info-bar">
        <div class="dtl-info-block">
            <div class="dtl-info-title">Data Segnalazione</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@Html.Raw(dataSegnalazioneStr)</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Ultimo Aggiornamento</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@Html.Raw(dataSegnalazioneStr)</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Scadenza</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@dataScadenzaStr</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Stato</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">Presa in carico</div>
            </div>
        </div>
    </div>
    <!-- Corpo principale a due colonne -->
    <div class="dtl-row">
        <!-- Colonna Sinistra: Riepilogo Segnalazione -->
        <div class="dtl-col-sx">
            <div class="dtl-card">
                <div class="dtl-card-body">
                    <h5 class="dtl-card-title">Riepilogo Segnalazione</h5>
                    <div class="sgn-field">
                        <label for="Descrizione" class="dtl-label">Descrizione:</label>
                        <div class="sgn-textarea">@(string.IsNullOrEmpty(Model.Descrizione) ? "Nessuna descrizione fornita" : Model.Descrizione)</div>
                    </div>
                    <div class="sgn-field">
                        <label for="PersoneCoinvolte" class="dtl-label">Persone Coinvolte:</label>
                        <div class="sgn-textarea">@(string.IsNullOrWhiteSpace(Model.PersoneCoinvolte) ? "Nessun dato disponibile." : Model.PersoneCoinvolte)</div>
                    </div>
                    <div class="sgn-field">
                        <label for="AltriAConoscenza" class="dtl-label">Altri a Conoscenza:</label>
                        <div class="sgn-textarea">@(string.IsNullOrWhiteSpace(Model.AltriAConoscenza) ? "Nessun dato disponibile." : Model.AltriAConoscenza)</div>
                    </div>

                    <div class="dtl-row-info">
                        <div class="dtl-col-info">
                            <p class="dtl-label">Data Illecito:</p>
                            <span class="dtl-badge">
                                @{
                                    var dataIllecito = Model.DataIllecito;
                                    var oraIllecito = Model.OraIllecito; // TimeSpan?
                                    var dataStr = dataIllecito.HasValue ? dataIllecito.Value.ToString("dd-MM-yyyy") : null;
                                    string oraStr = null;
                                    if (oraIllecito.HasValue)
                                    {
                                        var hour = oraIllecito.Value.Hours;
                                        var minute = oraIllecito.Value.Minutes;
                                        var ampm = hour < 12 ? "am" : "pm";
                                        oraStr = $"{hour:D2}:{minute:D2}{ampm}";
                                    }
                                    if (!string.IsNullOrEmpty(dataStr) && !string.IsNullOrEmpty(oraStr))
                                    {
                                        @Html.Raw($"{dataStr}<span class='dtl-date-gap'></span>{oraStr}")
                                    }
                                    else if (!string.IsNullOrEmpty(dataStr))
                                    {
                                        @dataStr
                                    }
                                    else if (!string.IsNullOrEmpty(oraStr))
                                    {
                                        @oraStr
                                    }
                                    else
                                    {
                                        <span class="dtl-muted">Nessuna data selezionata</span>
                                    }
                                }
                            </span>
                        </div>
                                                <div class="dtl-col-info">
                            <div class="dtl-info-group">
                                <div>
                                    <span class="dtl-label">Rischio ritorsione:</span>
                                    <div class="sgn-radio-group">
                                        <input type="radio" class="sgn-radio" id="RischioSiDett" name="RischioRitorsioneDett" value="true" disabled @(Model.RischioRitorsione ? "checked" : "") />
                                        <label for="RischioSiDett" class="sgn-radio-label">Sì</label>
                                        <input type="radio" class="sgn-radio" id="RischioNoDett" name="RischioRitorsioneDett" value="false" disabled @(!Model.RischioRitorsione ? "checked" : "") />
                                        <label for="RischioNoDett" class="sgn-radio-label">No</label>
                                    </div>
                                </div>
                                <div>
                                    <span class="dtl-label">Pericolo imminente:</span>
                                    <div class="sgn-radio-group">
                                        <input type="radio" class="sgn-radio" id="PericoloSiDett" name="PericoloImminenteDett" value="true" disabled @(Model.PericoloImminente ? "checked" : "") />
                                        <label for="PericoloSiDett" class="sgn-radio-label">Sì</label>
                                        <input type="radio" class="sgn-radio" id="PericoloNoDett" name="PericoloImminenteDett" value="false" disabled @(!Model.PericoloImminente ? "checked" : "") />
                                        <label for="PericoloNoDett" class="sgn-radio-label">No</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Colonna Destra: Riepilogo Informazioni Identificative -->
        <div class="dtl-col-dx">
            <div class="dtl-card">
                <h5 class="dtl-card-title">Riepilogo Informazioni Identificative</h5>
                <form asp-action="UpdateDetails" method="post" id="identitaForm">
                    <input type="hidden" asp-for="Id" />
                    <div class="dtl-form-group">
                        <label for="Nome" class="dtl-label">Nome</label>
                        <input asp-for="Nome" class="dtl-input" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Cognome" class="dtl-label">Cognome</label>
                        <input asp-for="Cognome" class="dtl-input" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Email" class="dtl-label">Email</label>
                        <input asp-for="Email" class="dtl-input" type="email" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Telefono" class="dtl-label">Telefono</label>
                        <input asp-for="Telefono" class="dtl-input" disabled />
                    </div>
                    <div class="dtl-form-btnrow">
                        <button type="button" id="btnAnnulla" class="dtl-btn-annulla">Annulla</button>
                        <button type="button" id="btnModifica" class="dtl-btn-invia">Modifica</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Sezione Allegati -->
    <div class="dtl-card">
        <div class="dtl-card-header">
            <h5 class="dtl-card-title">Allegati</h5>
    <div class="card">
        <div class="card-header">
            <h4 class="">Allegati</h4>
        </div>
        <div class="dtl-card-body">
            <table class="dtl-table">
                <thead>
                    <tr>
                        <th>Nome File</th>
                        <th>Data di caricamento</th>
                        <th>Tipo</th>
                        <th>Dimensione File</th>
                        <th>Azioni</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var allegato in Model.Allegati.OrderByDescending(a => a.DataCaricamento))
                    {
                        <tr>
                            <td>
                            <a href="/@allegato.FilePath" target="_blank">@allegato.NomeFile</a>
                        </td>
                            <td>@allegato.DataCaricamento.ToString("dd-MM-yyyy HH:mm")</td>
                            <td>@allegato.TipoMime.Split('/').Last()</td>
                            <td>@(allegato.Dimensione / 1024) KB</td>
                            
                            <td>
                                <form asp-action="DeleteAttachment" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@allegato.Id" />
                                    <button type="submit" class="btn btn-danger btn-sm">Cancella</button>
                                </form>
                            </td>
                            
                        </tr>
                    }
                </tbody>
            </table>
            <form asp-action="CaricaFile" method="post" enctype="multipart/form-data" class="mt-3">
                <input type="hidden" name="segnalazioneId" value="@Model.Id" />
                <div class="mb-3">
                    <label for="fileUpload">Carica un file (massimo 25 MB)</label>
                    <input type="file" id="fileUpload" name="file" accept=".png,.jpg,.jpeg" class="form-control" />
                    <p class="text-muted">Max File size: 25 MB</p>
                    <button type="submit" class="btn btn-primary mt-2">Carica</button>
                </div>
            </form>

            @if (!string.IsNullOrEmpty(TempData?.Peek("NomeFile") as string))
            {
                <div class="mt-2 text-success">
                    File caricato: @TempData["NomeFile"]
                </div>
            }
        </div>
    </div>

    <!-- Sezione Chat -->
    <div class="card mb-4">
        <div class="card-header">
            <h5>Chat con Operatore</h5>
        </div>
        <div class="card-body">
            <!-- Area chat -->
            <div id="chatBox" style="max-height: 300px; overflow-y: auto; border: 1px solid #ccc; padding: 10px; background-color: #f9f9f9;">
                @foreach (var messaggio in Model.MessaggiChat.OrderBy(m => m.DataInvio))
                {
                    <div class="d-flex flex-column @(messaggio.Mittente == "Utente" ? "align-items-end" : "") mb-2">
                        <strong>@(messaggio.Mittente)</strong>
                        <span class="bg-@(messaggio.Mittente == "Utente" ? "success text-white" : "light") p-2 rounded">
                            @messaggio.Testo
                        </span>
                    </div>
                }
            </div>

            <!-- Form per rispondere -->
            <form asp-action="InviaMessaggio" id="chatForm" method="post" class="mt-3 d-flex">
                <input type="hidden" name="segnalazioneId" value="@Model.Id" />
                <input type="text" name="testo" class="form-control me-2" placeholder="Scrivi una risposta..." required />
                <button type="submit" class="btn btn-success">Invia</button>
            </form>
        </div>
    </div>

</div>
        
@section Scripts {
<script>
    const form = document.getElementById('identitaForm');
    const btnModifica = document.getElementById('btnModifica');
    const btnAnnulla = document.getElementById('btnAnnulla');
    const inputs = form.querySelectorAll('.dtl-input');
    let originalValues = {};
    btnAnnulla.style.display = 'none';
    btnModifica.addEventListener('click', function() {
        if (btnModifica.textContent === 'Modifica') {
        
            inputs.forEach(input => { originalValues[input.name] = input.value; input.disabled = false; });
            btnModifica.textContent = 'Invia';
            btnAnnulla.style.display = 'inline-block';
        } else {
            form.submit();
        }
    });
    btnAnnulla.addEventListener('click', function() {
        inputs.forEach(input => { input.value = originalValues[input.name] || ''; input.disabled = true; });
        btnModifica.textContent = 'Modifica';
        btnAnnulla.style.display = 'none'; 
    });
    form.addEventListener('submit', function() {
        setTimeout(() => {
            inputs.forEach(input => input.disabled = true);
            btnModifica.textContent = 'Modifica';
            btnAnnulla.style.display = 'none'; 
        }, 100);
    });

    document.getElementById("chatForm")?.addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const url = this.getAttribute("action");

            const response = await fetch(url, {
                method: "POST",
                body: new URLSearchParams(formData)
            });

            if (response.ok) {
                location.reload();
            }
            else {
                alert("Errore durante l'invio del messaggio");
            }
        });
</script>
}