@model WhistleblowingApp.Models.Segnalazione

@{
    ViewData["Title"] = "Whistleblowing - Dettagli Segnalazione";
    var dataSegnalazione = Model.DataCreazione;
    string dataSegnalazioneStr = "";
    var hour = dataSegnalazione.Hour;
    var minute = dataSegnalazione.Minute;
    var ampm = hour < 12 ? "am" : "";
    dataSegnalazioneStr = $"{dataSegnalazione:dd-MM-yyyy}<span class='dtl-date-gap'></span>{hour:D2}:{minute:D2}{ampm}";
    var dataScadenza = dataSegnalazione.AddMonths(3);
    var dataScadenzaStr = dataScadenza.ToString("dd-MM-yyyy");
}

<div class="dtl-container">
    <div class="dtl-info-bar">
        <div class="dtl-info-block">
            <div class="dtl-info-title">Data Segnalazione</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@Html.Raw(dataSegnalazioneStr)</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Ultimo Aggiornamento</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@Html.Raw(dataSegnalazioneStr)</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Scadenza</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">@dataScadenzaStr</div>
            </div>
        </div>
        <div class="dtl-info-block">
            <div class="dtl-info-title">Stato</div>
            <div class="dtl-info-value-bg">
                <div class="dtl-info-value">Presa in carico</div>
            </div>
        </div>
    </div>
    <div class="dtl-row">
        <div class="dtl-col-sx">
            <div class="dtl-card">
                <h5 class="dtl-card-title">Riepilogo Segnalazione</h5>
                <div class="sgn-field">
                    <label for="Descrizione" class="dtl-label">Descrizione:</label>
                    <div class="sgn-textarea">@(string.IsNullOrEmpty(Model.Descrizione) ? "Nessuna descrizione fornita" : Model.Descrizione)</div>
                </div>
                <div class="sgn-field">
                    <label for="PersoneCoinvolte" class="dtl-label">Persone Coinvolte:</label>
                    <div class="sgn-textarea">@(string.IsNullOrWhiteSpace(Model.PersoneCoinvolte) ? "Nessun dato disponibile." : Model.PersoneCoinvolte)</div>
                </div>
                <div class="sgn-field">
                    <label for="AltriAConoscenza" class="dtl-label">Altri a Conoscenza:</label>
                    <div class="sgn-textarea">@(string.IsNullOrWhiteSpace(Model.AltriAConoscenza) ? "Nessun dato disponibile." : Model.AltriAConoscenza)</div>
                </div>
                <div>
                    <p class="dtl-label">Data Illecito:</p>
                    <span class="dtl-date">
                        @{
                            var dataIllecito = Model.DataIllecito;
                            var oraIllecito = Model.OraIllecito;
                            var dataStr = dataIllecito.HasValue ? dataIllecito.Value.ToString("dd-MM-yyyy") : null;
                            string oraStr = "";
                            if (oraIllecito.HasValue)
                            {
                                hour = oraIllecito.Value.Hours;
                                minute = oraIllecito.Value.Minutes;
                                ampm = hour < 12 ? "am" : "";
                                oraStr = $"{hour:D2}:{minute:D2}{ampm}";
                            }
                            if (!string.IsNullOrEmpty(dataStr) && !string.IsNullOrEmpty(oraStr))
                            {
                                @Html.Raw($"{dataStr}<span class='dtl-date-gap'></span>{oraStr}")
                            }
                            else if (!string.IsNullOrEmpty(dataStr))
                            {
                                @dataStr
                            }
                            else if (!string.IsNullOrEmpty(oraStr))
                            {
                                @oraStr
                            }
                            else
                            {
                                <span>Nessuna data selezionata</span>
                            }
                        }
                    </span>
                </div>
                <div>
                    <span class="dtl-label">Rischio ritorsione:</span>
                    <div class="sgn-radio-group">
                        <input type="radio" class="sgn-radio" id="RischioSiDett" name="RischioRitorsioneDett" value="true" disabled @(Model.RischioRitorsione ? "checked" : "") />
                        <label for="RischioSiDett" class="sgn-radio-label">Sì</label>
                        <input type="radio" class="sgn-radio" id="RischioNoDett" name="RischioRitorsioneDett" value="false" disabled @(!Model.RischioRitorsione ? "checked" : "") />
                        <label for="RischioNoDett" class="sgn-radio-label">No</label>
                    </div>
                </div>
                <div>
                    <span class="dtl-label">Pericolo imminente:</span>
                    <div class="sgn-radio-group">
                        <input type="radio" class="sgn-radio" id="PericoloSiDett" name="PericoloImminenteDett" value="true" disabled @(Model.PericoloImminente ? "checked" : "") />
                        <label for="PericoloSiDett" class="sgn-radio-label">Sì</label>
                        <input type="radio" class="sgn-radio" id="PericoloNoDett" name="PericoloImminenteDett" value="false" disabled @(!Model.PericoloImminente ? "checked" : "") />
                        <label for="PericoloNoDett" class="sgn-radio-label">No</label>
                    </div>
                </div>
            </div>
        </div>
        <div class="dtl-col-dx">
            <div class="dtl-card">
                <h5 class="dtl-card-title">Riepilogo Informazioni Identificative</h5>
                <form asp-controller="Dettagli" asp-action="UpdateDetails" method="post" id="identitaForm">
                    <input type="hidden" asp-for="Id" />
                    <div class="dtl-form-group">
                        <label for="Nome" class="dtl-label">Nome</label>
                        <input asp-for="Nome" class="dtl-input" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Cognome" class="dtl-label">Cognome</label>
                        <input asp-for="Cognome" class="dtl-input" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Email" class="dtl-label">Email</label>
                        <input asp-for="Email" class="dtl-input" type="email" required disabled />
                    </div>
                    <div class="dtl-form-group">
                        <label for="Telefono" class="dtl-label">Telefono</label>
                        <input asp-for="Telefono" id="Telefono" class="dtl-input" type="tel" pattern="[0-9]{10}" inputmode="numeric" title="Inserisci un numero di telefono italiano di 10 cifre" maxlength="10" disabled />
                    </div>
                    <div class="dtl-form-btnrow">
                        <button type="button" id="btnAnnulla" class="dtl-btn-annulla">Annulla</button>
                        <button type="button" id="btnModifica" class="dtl-btn-invia">Modifica</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="dtl-card">
        <h5 class="dtl-card-title">Allegati</h5>
            <table class="dtl-table">
                <thead>
                    <tr>
                        <th>Nome File</th>
                        <th>Data di caricamento</th>
                        <th class="col-tipo">Tipo</th>
                        <th class="col-dim">Dimensione File</th>
                        <th>Azioni</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var allegato in Model.Allegati.OrderByDescending(a => a.DataCaricamento))
                    {
                        <tr>
                            <td>
                            <a href="/@allegato.FilePath" target="_blank">@allegato.NomeFile</a>
                        </td>
                            <td>@allegato.DataCaricamento.ToString("dd-MM-yyyy HH:mm")</td>
                            <td class="col-tipo">@allegato.TipoMime.Split('/').Last()</td>
                            <td class="col-dim">@(allegato.Dimensione / 1024) KB</td>
                            
                            <td>
                                <form asp-controller="Dettagli" asp-action="DeleteAttachment" method="post" style="display:inline;">
                                    <input type="hidden" name="id" value="@allegato.Id" />
                                    <button type="submit" class="btn-canc-img">Cancella</button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <form asp-controller="Dettagli" asp-action="CaricaFile" method="post" enctype="multipart/form-data" >
                <input type="hidden" name="segnalazioneId" value="@Model.Id" />
                <div>
                    <label for="fileUpload">Carica un file (massimo 25 MB)</label>
                    <div id="dropZone" class="drop-zone text-center p-4 border rounded bg-light">
                        <p class="text-muted">Trascina qui il file o fai clic per selezionare</p>
                        <input type="file" id="fileUpload" name="file" accept=".png,.jpg,.jpeg" class="d-none" required />
                        
                        <div id="fileNameDisplay" class="text-muted">Nessun file selezionato</div>

                        <button type="button" class="btn-canc-img"
                                onclick="document.getElementById('fileUpload').click();">
                            Scegli File
                        </button>
                    </div>
                    <p class="text-muted">Max File size: 25 MB</p>
                    <button type="submit" class="dtl-btn-carica">Carica</button>
                </div>
            </form>
    </div>
    <div class="dtl-card">
    <h5 class="dtl-card-title">Chat con Operatore</h5>
        <div id="chatBox" class="chat-box">
            @foreach (var messaggio in Model.MessaggiChat.OrderBy(m => m.DataInvio))
            {
                <div class="chat-message @(messaggio.Mittente == "Utente" ? "user-message" : "operator-message") mb-2">
                    <div class="@(messaggio.Mittente == "Utente" ? "text-end" : "text-start")">
                        <strong>@(messaggio.Mittente)</strong>
                    </div>
                    <div class="message-content p-2 rounded">@messaggio.Testo</div>
                </div>
            }
        </div>

        <form asp-controller="Dettagli" asp-action="InviaMessaggio" id="chatForm" method="post" class="mt-3 d-flex">
            <input type="hidden" name="segnalazioneId" value="@Model.Id" />
            <input type="text" name="testo" class="form-control me-2" placeholder="Scrivi una risposta..." required />
            <button type="submit" class="dtl-btn-invia">Invia</button>
        </form>  
    </div>
        
@section Scripts {
<script>
    const form = document.getElementById('identitaForm');
    const btnModifica = document.getElementById('btnModifica');
    const btnAnnulla = document.getElementById('btnAnnulla');
    const inputs = form.querySelectorAll('.dtl-input');
    let originalValues = {};
    btnAnnulla.style.display = 'none';
    btnModifica.addEventListener('click', function() {
        if (btnModifica.textContent === 'Modifica') {
        
            inputs.forEach(input => { originalValues[input.name] = input.value; input.disabled = false; });
            btnModifica.textContent = 'Invia';
            btnAnnulla.style.display = 'inline-block';
        } else {
            form.submit();
        }
    });
    btnAnnulla.addEventListener('click', function() {
        inputs.forEach(input => { input.value = originalValues[input.name] || ''; input.disabled = true; });
        btnModifica.textContent = 'Modifica';
        btnAnnulla.style.display = 'none'; 
    });
    form.addEventListener('submit', function() {
        setTimeout(() => {
            inputs.forEach(input => input.disabled = true);
            btnModifica.textContent = 'Modifica';
            btnAnnulla.style.display = 'none'; 
        }, 100);
    });

    document.getElementById("chatForm")?.addEventListener("submit", async function (e) {
            e.preventDefault();

            const formData = new FormData(this);
            const url = this.getAttribute("action");

            const response = await fetch(url, {
                method: "POST",
                body: new URLSearchParams(formData)
            });

            if (response.ok) {
                location.reload();
            }
            else {
                alert("Errore durante l'invio del messaggio");
            }
        });
    
    const dropZone = document.getElementById('dropZone');
    const fileInput = document.getElementById('fileUpload');
    const fileNameDisplay = document.getElementById("fileNameDisplay");

    dropZone.addEventListener('dragover', (e) => {
        e.preventDefault();
        dropZone.classList.add('drag-over');
    });

    dropZone.addEventListener('dragleave', () => {
        dropZone.classList.remove('drag-over');
    });

    dropZone.addEventListener('drop', (e) => {
        e.preventDefault();
        dropZone.classList.remove('drag-over');

        const files = e.dataTransfer.files;
        if (files.length > 0) {
            fileInput.files = files;
            updateFileName();
        }
    });

    fileInput.addEventListener("change", updateFileName);

        function updateFileName() {
            if (fileInput.files.length > 0) {
                fileNameDisplay.textContent = fileInput.files[0].name;
            } else {
                fileNameDisplay.textContent = "Nessun file selezionato";
            }
        }

    document.getElementById('Telefono').addEventListener('input', function (e) {
        this.value = this.value.replace(/[^0-9]/g, '').slice(0, 10);
    });
</script>
}